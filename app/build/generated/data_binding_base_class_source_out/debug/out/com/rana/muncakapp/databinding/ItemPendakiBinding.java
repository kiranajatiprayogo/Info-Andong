// Generated by view binder compiler. Do not edit!
package com.rana.muncakapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rana.muncakapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPendakiBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout btnEdit;

  @NonNull
  public final LinearLayout btnHapus;

  @NonNull
  public final CardView cvPendaki;

  @NonNull
  public final TextView tvAlamatPendaki;

  @NonNull
  public final TextView tvIdPendaki;

  @NonNull
  public final TextView tvIdRegu;

  @NonNull
  public final TextView tvNamaPendaki;

  @NonNull
  public final TextView tvNamaRegu;

  @NonNull
  public final TextView tvNoHPKeluarga;

  @NonNull
  public final TextView tvNoHPPribadi;

  @NonNull
  public final TextView tvUmurPendaki;

  private ItemPendakiBinding(@NonNull CardView rootView, @NonNull LinearLayout btnEdit,
      @NonNull LinearLayout btnHapus, @NonNull CardView cvPendaki,
      @NonNull TextView tvAlamatPendaki, @NonNull TextView tvIdPendaki, @NonNull TextView tvIdRegu,
      @NonNull TextView tvNamaPendaki, @NonNull TextView tvNamaRegu,
      @NonNull TextView tvNoHPKeluarga, @NonNull TextView tvNoHPPribadi,
      @NonNull TextView tvUmurPendaki) {
    this.rootView = rootView;
    this.btnEdit = btnEdit;
    this.btnHapus = btnHapus;
    this.cvPendaki = cvPendaki;
    this.tvAlamatPendaki = tvAlamatPendaki;
    this.tvIdPendaki = tvIdPendaki;
    this.tvIdRegu = tvIdRegu;
    this.tvNamaPendaki = tvNamaPendaki;
    this.tvNamaRegu = tvNamaRegu;
    this.tvNoHPKeluarga = tvNoHPKeluarga;
    this.tvNoHPPribadi = tvNoHPPribadi;
    this.tvUmurPendaki = tvUmurPendaki;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPendakiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPendakiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pendaki, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPendakiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit;
      LinearLayout btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btn_hapus;
      LinearLayout btnHapus = ViewBindings.findChildViewById(rootView, id);
      if (btnHapus == null) {
        break missingId;
      }

      CardView cvPendaki = (CardView) rootView;

      id = R.id.tv_alamatPendaki;
      TextView tvAlamatPendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvAlamatPendaki == null) {
        break missingId;
      }

      id = R.id.tv_idPendaki;
      TextView tvIdPendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvIdPendaki == null) {
        break missingId;
      }

      id = R.id.tv_idRegu;
      TextView tvIdRegu = ViewBindings.findChildViewById(rootView, id);
      if (tvIdRegu == null) {
        break missingId;
      }

      id = R.id.tv_namaPendaki;
      TextView tvNamaPendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaPendaki == null) {
        break missingId;
      }

      id = R.id.tv_namaRegu;
      TextView tvNamaRegu = ViewBindings.findChildViewById(rootView, id);
      if (tvNamaRegu == null) {
        break missingId;
      }

      id = R.id.tv_noHPKeluarga;
      TextView tvNoHPKeluarga = ViewBindings.findChildViewById(rootView, id);
      if (tvNoHPKeluarga == null) {
        break missingId;
      }

      id = R.id.tv_noHPPribadi;
      TextView tvNoHPPribadi = ViewBindings.findChildViewById(rootView, id);
      if (tvNoHPPribadi == null) {
        break missingId;
      }

      id = R.id.tv_umurPendaki;
      TextView tvUmurPendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvUmurPendaki == null) {
        break missingId;
      }

      return new ItemPendakiBinding((CardView) rootView, btnEdit, btnHapus, cvPendaki,
          tvAlamatPendaki, tvIdPendaki, tvIdRegu, tvNamaPendaki, tvNamaRegu, tvNoHPKeluarga,
          tvNoHPPribadi, tvUmurPendaki);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
