// Generated by view binder compiler. Do not edit!
package com.rana.muncakapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rana.muncakapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRencanaPendakianBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LinearLayout btnEdit;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final RecyclerView rvRiwayat;

  @NonNull
  public final TextView tvLihatPendaki;

  private ActivityRencanaPendakianBinding(@NonNull NestedScrollView rootView,
      @NonNull LinearLayout btnEdit, @NonNull ImageView ivBack, @NonNull RecyclerView rvRiwayat,
      @NonNull TextView tvLihatPendaki) {
    this.rootView = rootView;
    this.btnEdit = btnEdit;
    this.ivBack = ivBack;
    this.rvRiwayat = rvRiwayat;
    this.tvLihatPendaki = tvLihatPendaki;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRencanaPendakianBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRencanaPendakianBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_rencana_pendakian, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRencanaPendakianBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit;
      LinearLayout btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.rvRiwayat;
      RecyclerView rvRiwayat = ViewBindings.findChildViewById(rootView, id);
      if (rvRiwayat == null) {
        break missingId;
      }

      id = R.id.tv_lihatPendaki;
      TextView tvLihatPendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvLihatPendaki == null) {
        break missingId;
      }

      return new ActivityRencanaPendakianBinding((NestedScrollView) rootView, btnEdit, ivBack,
          rvRiwayat, tvLihatPendaki);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
