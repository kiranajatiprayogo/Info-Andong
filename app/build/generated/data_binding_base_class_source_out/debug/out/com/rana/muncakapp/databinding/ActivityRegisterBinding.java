// Generated by view binder compiler. Do not edit!
package com.rana.muncakapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rana.muncakapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final EditText edEmailUser;

  @NonNull
  public final EditText edHint;

  @NonNull
  public final EditText edPasswordUser;

  @NonNull
  public final EditText edUsernameUser;

  @NonNull
  public final Spinner spHint;

  @NonNull
  public final TextView tvText;

  @NonNull
  public final TextView tvTipeUser;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRegister,
      @NonNull EditText edEmailUser, @NonNull EditText edHint, @NonNull EditText edPasswordUser,
      @NonNull EditText edUsernameUser, @NonNull Spinner spHint, @NonNull TextView tvText,
      @NonNull TextView tvTipeUser) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.edEmailUser = edEmailUser;
    this.edHint = edHint;
    this.edPasswordUser = edPasswordUser;
    this.edUsernameUser = edUsernameUser;
    this.spHint = spHint;
    this.tvText = tvText;
    this.tvTipeUser = tvTipeUser;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_register;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.ed_emailUser;
      EditText edEmailUser = ViewBindings.findChildViewById(rootView, id);
      if (edEmailUser == null) {
        break missingId;
      }

      id = R.id.ed_hint;
      EditText edHint = ViewBindings.findChildViewById(rootView, id);
      if (edHint == null) {
        break missingId;
      }

      id = R.id.ed_passwordUser;
      EditText edPasswordUser = ViewBindings.findChildViewById(rootView, id);
      if (edPasswordUser == null) {
        break missingId;
      }

      id = R.id.ed_usernameUser;
      EditText edUsernameUser = ViewBindings.findChildViewById(rootView, id);
      if (edUsernameUser == null) {
        break missingId;
      }

      id = R.id.sp_hint;
      Spinner spHint = ViewBindings.findChildViewById(rootView, id);
      if (spHint == null) {
        break missingId;
      }

      id = R.id.tv_text;
      TextView tvText = ViewBindings.findChildViewById(rootView, id);
      if (tvText == null) {
        break missingId;
      }

      id = R.id.tv_tipeUser;
      TextView tvTipeUser = ViewBindings.findChildViewById(rootView, id);
      if (tvTipeUser == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, btnRegister, edEmailUser,
          edHint, edPasswordUser, edUsernameUser, spHint, tvText, tvTipeUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
