// Generated by view binder compiler. Do not edit!
package com.rana.muncakapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rana.muncakapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPanduanMendakiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Toolbar btnKembali;

  @NonNull
  public final ImageView imgPanduan;

  @NonNull
  public final TextView tvPanduanMendaki;

  @NonNull
  public final TextView tvSub1;

  @NonNull
  public final TextView tvSub2;

  @NonNull
  public final TextView tvSub3;

  @NonNull
  public final TextView tvSub4;

  @NonNull
  public final TextView tvSub5;

  private ActivityPanduanMendakiBinding(@NonNull RelativeLayout rootView,
      @NonNull Toolbar btnKembali, @NonNull ImageView imgPanduan,
      @NonNull TextView tvPanduanMendaki, @NonNull TextView tvSub1, @NonNull TextView tvSub2,
      @NonNull TextView tvSub3, @NonNull TextView tvSub4, @NonNull TextView tvSub5) {
    this.rootView = rootView;
    this.btnKembali = btnKembali;
    this.imgPanduan = imgPanduan;
    this.tvPanduanMendaki = tvPanduanMendaki;
    this.tvSub1 = tvSub1;
    this.tvSub2 = tvSub2;
    this.tvSub3 = tvSub3;
    this.tvSub4 = tvSub4;
    this.tvSub5 = tvSub5;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPanduanMendakiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPanduanMendakiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_panduan_mendaki, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPanduanMendakiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_kembali;
      Toolbar btnKembali = ViewBindings.findChildViewById(rootView, id);
      if (btnKembali == null) {
        break missingId;
      }

      id = R.id.img_panduan;
      ImageView imgPanduan = ViewBindings.findChildViewById(rootView, id);
      if (imgPanduan == null) {
        break missingId;
      }

      id = R.id.tv_panduanMendaki;
      TextView tvPanduanMendaki = ViewBindings.findChildViewById(rootView, id);
      if (tvPanduanMendaki == null) {
        break missingId;
      }

      id = R.id.tv_sub1;
      TextView tvSub1 = ViewBindings.findChildViewById(rootView, id);
      if (tvSub1 == null) {
        break missingId;
      }

      id = R.id.tv_sub2;
      TextView tvSub2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSub2 == null) {
        break missingId;
      }

      id = R.id.tv_sub3;
      TextView tvSub3 = ViewBindings.findChildViewById(rootView, id);
      if (tvSub3 == null) {
        break missingId;
      }

      id = R.id.tv_sub4;
      TextView tvSub4 = ViewBindings.findChildViewById(rootView, id);
      if (tvSub4 == null) {
        break missingId;
      }

      id = R.id.tv_sub5;
      TextView tvSub5 = ViewBindings.findChildViewById(rootView, id);
      if (tvSub5 == null) {
        break missingId;
      }

      return new ActivityPanduanMendakiBinding((RelativeLayout) rootView, btnKembali, imgPanduan,
          tvPanduanMendaki, tvSub1, tvSub2, tvSub3, tvSub4, tvSub5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
